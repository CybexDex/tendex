# Endpoint for P2P node to listen on
 p2p-endpoint = 0.0.0.0:55000 

# P2P nodes to connect to on startup (may specify multiple times)
# seed-node =  

# JSON array of P2P nodes to connect to on startup
# seed-nodes = 
#seed-nodes = [ "192.168.0.1:55000" ,"192.168.0.14:55000","192.168.0.3:55000","192.168.0.4:55000","192.168.0.5:55000","192.168.0.6:55000","192.168.0.7:55000","192.168.0.8:55000","192.168.0.9:55000","192.168.0.10:55000","192.168.0.11:55000","192.168.0.12:55000","192.168.0.13:55000","192.168.0.6:55000","192.168.0.7:55000","192.168.0.8:55000","192.168.0.9:55000","192.168.0.10:55000" ]

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Endpoint for websocket RPC to listen on
rpc-endpoint = 0.0.0.0:38093

# Endpoint for TLS websocket RPC to listen on
#rpc-tls-endpoint = 0.0.0.0:7090

# The TLS certificate file for this server
#server-pem =  

# Password for this certificate
#server-pem-password =  

# File to read Genesis State from
genesis-json = "/home/tendermint/tendex/node6/data/genesis.json"

# Block signing key to use for init witnesses, overrides genesis file
# dbg-init-key = 

# JSON file specifying API permissions
# api-access = 

# Enable block production, even if the chain is stale.
enable-stale-production = true 

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = false

# ID of witness controlled by this node (e.g. "1.6.5", quotes are required, may specify multiple times)
#witness-id = "1.6.1"
#private-key = [ "CYB8iWrVHcBaq74mqA6Dd58yeN7pEgmvBLrhYB1HSQRj8UBrHec5u", "5JD6RHheDv9ZHEpGhRwWyZiBvoaEbPjGygpxCBTfvubkbnVhzXz" ]
witness-id = "1.6.2"
private-key = [ "CYB8Vfkpqn6B35xTMCwhqUuGDHuTfdmo368zDWT4xz2MZmy368Gvh", "5J5x6xiqqYp6ADQG1iBihj3sJzJZTKdRMF5HPN3UZdimRbY4oR6" ]
#witness-id = "1.6.3"
#private-key = [ "CYB7jgQr7HwAuHxLyi2Lmn3TAmKRL68PxttURY5jrV6Hf5F2qykau", "5JkAK8M4WJ2NdxD7g1aANZ8WRJC7phbSEzGvMLAdbQeMuLxKedu" ]
#witness-id = "1.6.4"
#private-key = [ "CYB7tvEgzVZTnMGo58xNY8ADudt73C4uLj7jFU8wcTvjAV5vBYuBg", "5JVBnk3r5UwAM4kScqYtT732KfZXw67SjVZmqrxz9cAXNPhiQrU" ]
#witness-id = "1.6.5"
#private-key = [ "CYB794BG2L6r1g4Qo6KYAQVqvBY6dK5z8wBwQd4ueiyXpDtBTV1K2", "5JsnaUuvbH4Lw6UmF8g6X1qZPnbEMeayMEVZKSgRvgpmGXqsQuu" ]
#witness-id = "1.6.6"
#private-key = [ "CYB6FCxfyxx8w5jUeYePfduJXxXjePzmaStosNX5W4AcYsw22rqPr", "5JBMhM5PCHu3xER774aGSyVbb6ksNvDhNwwB3gurwdgHBL1Do66" ]
#witness-id = "1.6.7"
#private-key = [ "CYB6czeZpym8QVLtHLvRCNwfAe9hkeBJTqRzZuJQv6Mr3KaDoxcep", "5KaSrn2wx7QeuAbHjBh9nwqf6YUM6jeEuExr5CmKqofarA97rJg" ]
#witness-id = "1.6.8"
#private-key = [ "CYB5VfCmMhLgAwrqb8TSNHc2KktsstTzeRa7CbkHFN8xDzgtqQYUr", "5JSNjdrtWJS922kwmaK2LahvFEKia4niF21UdSk3ZmDKvte47ir" ]
#witness-id = "1.6.9"
#private-key = [ "CYB5NzQmixDFpQnsCWKbdHUeV8hjgTosC42F7jbEbpkD71pZgXwhr", "5Jq1Zrmikb1FCtnmjy483Avq2CgukoPiajCk1CcwfxnEUPCxuMu" ]
#witness-id = "1.6.10"
#private-key = [ "CYB5TShTBwJao7vmTcPy3AiMZ9ioVvn4ydQtjAaDbo7PaW3oRFaqy", "5JiLtzxzR8rTxWiAjNQkzYHin7m3qibkXpgeheeYmXSERKMS2CN" ]
#witness-id = "1.6.11"
#private-key = [ "CYB8X9XnVCWoNJgFvb4BgGHxuDgZdNF3NMvreZFvVC94wFcbMpEAE", "5JomwZvHmgXUjDXf8XqCeuYDY7Ei8FmV2e9WcTnMW9JiVwwp9jd" ]
#
# Tuple of [PublicKey, WIF private key] (may specify multiple times)
# Account ID to track history for (may specify multiple times)
# track-account = 

# Keep only those operations in memory that are related to account history tracking
# partial-operations = 

# Maximum number of operations per account will be kept in memory
# max-ops-per-account = 

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
bucket-size = [15,60,300,3600,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 1000)
history-per-size = 1000

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]


stream=std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.screen]
filename=logs/screen.log
# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
filename=logs/p2p/p2p.log
# filename can be absolute or relative to this config file
# route any messages logged to the default logger to the "stderr" logger we
# declared above, if they are info level are higher
[logger.default]
level=info
appenders=stderr screen 

# route messages sent to the "p2p" logger to the p2p appender declared above
[logger.p2p]
level=warn
appenders=p2p

